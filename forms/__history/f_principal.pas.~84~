unit f_principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Phys.FBDef, FireDAC.Phys.IBBase, FireDAC.Phys.FB,
  IBX.IBQuery, Vcl.Grids, Vcl.DBGrids, IBX.IBCustomDataSet, IBX.IBTable,
  IBX.IBDatabase, IBX.IBEvents;

type
  Tfrm_principal = class(TForm)
    pnlClient: TPanel;
    dsDATMOV: TDataSource;
    DBGrid1: TDBGrid;
    qBusca: TIBQuery;
    IBEvents1: TIBEvents;
    ibConexao: TIBDatabase;
    ibTransacao: TIBTransaction;
    pnlBottom: TPanel;
    btn_concluir_fechamento: TButton;
    btn_sair: TButton;
    qAtualiza: TIBQuery;
    btn_iniciar_fechamento: TButton;
    btn_atualizar: TButton;
    qDATMOV: TIBQuery;
    qDATMOVDATA: TDateField;
    qDATMOVFECHOU: TIBStringField;
    qDATMOVFECHAMENTO_INICIADO: TIBStringField;
    btnNull: TButton;
    edt_usuario: TEdit;
    edt_terminal: TEdit;
    procedure btn_sairClick(Sender: TObject);
    procedure IBEvents1EventAlert(Sender: TObject; EventName: string;
      EventCount: Integer; var CancelAlerts: Boolean);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure btn_iniciar_fechamentoClick(Sender: TObject);
    procedure btn_atualizarClick(Sender: TObject);
    procedure btnNullClick(Sender: TObject);
    procedure edt_usuarioExit(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_principal: Tfrm_principal;

  wusuario_logado: string;


implementation

{$R *.dfm}

procedure Tfrm_principal.btn_iniciar_fechamentoClick(Sender: TObject);
begin
    try
      if not ibTransacao.Active then
        ibTransacao.Active := True;

      qAtualiza.Close;
      qAtualiza.SQL.Clear;
      qAtualiza.SQL.Add('UPDATE DATMOV ');
      qAtualiza.SQL.Add('SET FECHAMENTO_INICIADO = :pFECHAMENTO_INICIADO ');
      qAtualiza.SQL.Add('SET FECHAMENTO_USUARIO  = :pFECHAMENTO_USUARIO ');
      qAtualiza.SQL.Add('SET FECHAMENTO_TERMINAL = :pFECHAMENTO_TERMINAL ');
      qAtualiza.SQL.Add('SET FECHAMENTO_HORA = :pFECHAMENTO_HORA ');
      qAtualiza.SQL.Add('WHERE DATA = :pDATA ');
      qAtualiza.SQL.Add('AND FECHOU = ''N'' ');
      qAtualiza.SQL.Add('AND FECHAMENTO_INICIADO IS NULL');
      qAtualiza.ParamByName('pFECHAMENTO_INICIADO').AsString := 'S';
      qAtualiza.ParamByName('pFECHAMENTO_USUARIO').AsString := edt_usuario.Text;
      qAtualiza.ParamByName('pFECHAMENTO_TERMINAL').AsString := edt_terminal.Text;
      qAtualiza.ParamByName('pFECHAMENTO_HORA').Value :=  Now;

      qAtualiza.ParamByName('pDATA').Value := qDATMOV.FieldByName('DATA').Value;
      qAtualiza.ExecSQL;

      ibTransacao.Commit;

      qDATMOV.Close;
      qDATMOV.Open;


     if wusuario_logado <> 'a' then
     begin
        Application.MessageBox('Não é possível continuar!' +#10+
                    'Finalize o fechamento para conseguir conectar novamente.' ,'Aviso',Mb_IconInformation + Mb_Ok  );

         Application.Terminate;
     end;

    except
      Application.MessageBox('Erro ao iniciar fechamento!',
                  'Erro',
                  Mb_IconInformation + Mb_Ok );

    end;

end;

procedure Tfrm_principal.btn_sairClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure Tfrm_principal.edt_usuarioExit(Sender: TObject);
begin


  if edt_usuario.Text <> '' then
    wusuario_logado := edt_usuario.Text
  else
  begin
    Application.MessageBox('Usuário não foi informado.',
                'Aviso',
                Mb_IconInformation + Mb_Ok  );
    edt_usuario.SetFocus;
  end;
end;

procedure Tfrm_principal.btnNullClick(Sender: TObject);
begin
    try
      if not ibTransacao.Active then
        ibTransacao.Active := True;

      qAtualiza.Close;
      qAtualiza.SQL.Clear;
      qAtualiza.SQL.Add('UPDATE DATMOV ');
      qAtualiza.SQL.Add('SET FECHAMENTO_INICIADO = :pINICIADO ');
      qAtualiza.SQL.Add('WHERE DATA = :pDATA ');
      qAtualiza.SQL.Add('AND FECHOU = ''N'' ');
      qAtualiza.SQL.Add('AND FECHAMENTO_INICIADO IS NOT NULL');
      qAtualiza.ParamByName('pINICIADO').Value := Null;
      qAtualiza.ParamByName('pDATA').Value := qDATMOV.FieldByName('DATA').Value;
      qAtualiza.ExecSQL;

      ibTransacao.Commit;

      qDATMOV.Close;
      qDATMOV.Open;

      Application.MessageBox('Atualizado para Null o campo Fechamento_Iniciado!',
                  'Aviso',
                  Mb_IconInformation + Mb_Ok  );

    except
      Application.MessageBox('Erro ao tentar atualizar o campo Fechamento_Iniciado!',
                  'Erro',
                  Mb_IconInformation + Mb_Ok );

    end;

end;

procedure Tfrm_principal.btn_atualizarClick(Sender: TObject);
begin
  qDATMOV.Close;
  qDATMOV.Open;
end;

procedure Tfrm_principal.FormCreate(Sender: TObject);
begin
  qDATMOV.Active := True;

{
  #@
  Aqui pDATA é apenas para fins de teste.
  Em produção, Iniciar Fechamento sempre vai ser na data atual?
  Definir se vai ser permitido Iniciar Fechamento hoje(data atual) referente a 5 dias atrás?

  A select abaixo faz uma validação para não permitir abrir o sistema caso um fechamento
  ainda não tenha sido finalizado.
  Nessa select tbm é necessário filtrar FECHOU= 'N' ?
}

  qBusca.SQL.Clear;
  qBusca.Close;
  qBusca.SQL.Add('select DATA, FECHOU, FECHAMENTO_INICIADO FROM DATMOV ');
  qBusca.SQL.Add('where DATA = :pDATA ');
  qBusca.ParamByName('pDATA').Value := qDATMOV.FieldByName('DATA').Value;
  qBusca.Open;

  qBusca.First;
  if qBusca.FieldByName('FECHAMENTO_INICIADO').AsString = 'S' then
  begin
    //verificar terminal e usuário
    Application.MessageBox('Não é possível conectar!' +#10+
                'Finalize o fechamento de caixa para conseguir conectar.' ,'Aviso',Mb_IconInformation + Mb_Ok  );

    Application.Terminate;

  end;

  IBEvents1.RegisterEvents;
end;

procedure Tfrm_principal.FormDestroy(Sender: TObject);
begin
  if ibConexao.Connected then
  begin
    if ibTransacao.InTransaction then
      ibTransacao.Commit;

    if IBEvents1.Registered then
      IBEvents1.UnRegisterEvents;

    qDATMOV.Active := False;

    ibConexao.Close;
  end;
end;

procedure Tfrm_principal.IBEvents1EventAlert(Sender: TObject; EventName: string;
  EventCount: Integer; var CancelAlerts: Boolean);
begin
  qDATMOV.Close;
  qDATMOV.Open;

  showmessage('Recebi o evento: ' + EventName);


  if wusuario_logado <> 'a' then
  begin
    Application.MessageBox('Não é possível continuar!' +#10+
                'Finalize o fechamento.' ,'Aviso',Mb_IconInformation + Mb_Ok  );

    Application.Terminate;
  end;


  //Consultar a tabela datmov e verificar se o usuario e o terminal = editterminal e edtusuario.

  //se for igual  não mostra mensagem nenhuma.
  //senão mostra

  //Application.MessageBox('Fechamento iniciado!', 'Aviso', Mb_IconInformation + Mb_Ok  );
  //mostrar na mensagem = usuário,terminal,hora



end;

end.
